<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require 'vendor/phpmailer/phpmailer/src/Exception.php';
require 'vendor/phpmailer/phpmailer/src/PHPMailer.php';
require 'vendor/phpmailer/phpmailer/src/SMTP.php';
require_once "config.php";

function GetTop20Spam() {
global $TABLE_BACKGROUND_1;
global $TABLE_BACKGROUND_2;
global $TABLE_BACKGROUND_1_HI;
global $TABLE_BACKGROUND_2_HI;
global $TABLE_BACKGROUND_HEADER;
global $rooturl;

	$dbconn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
	$query = "select * from statistics where deliveries_spam>deliveries_ham and Timestamp>adddate(now(),"-2 days") order by spamscore DESC limit 20";
	$result = $dbconn->query($query);

	$colnum=0;
    $color[0]=$TABLE_BACKGROUND_1;
    $color[1]=$TABLE_BACKGROUND_2;
    $color[2]=$TABLE_BACKGROUND_1_HI;
    $color[3]=$TABLE_BACKGROUND_2_HI;
    $color[4]=$TABLE_BACKGROUND_HEADER;

	$report="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23 bgColor=#f5f5f5><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD bgColor=#f5f5f5><SPAN class=Stil10><a name='top20'>&nbsp;Top 20 Spammer der letzten 48 Stunden:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD><TABLE name='top20spam' id='top20spam' border=0 cellspacing=0 cellpadding=0 width='100%'><TR bgcolor=".$color[4]."><TD><b>Hostname [IP]</b></TD><TD><b>Spamscore total</b></TD><TD><B>Anzahl Spam</B></TD><TD><b>Anzahl Ham</b></TD><TD><b>angefallene Datenmenge</b></TD><TD><b>erfasst seid</b></TD></TR>";

	if ($result) {
	    while($row = $result->fetch_assoc()){
	    	$hostname = gethostbyaddr($row['IP']);

			if ($hostname) {
			    $host=$hostname." [".$row['IP']."]";
			} else $host=$row['IP'];

	        if ($colnum==1) $colnum=0;
		    else $colnum=1;

			$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$host."</TD><TD>".round($row['spamscore']/10,1)."</TD><TD>".$row['deliveries_spam']."</TD><TD>".$row['deliveries_ham']."</TD><TD>".formatTraffic($row['traffic'])."</TD><TD>".$row['Timestamp_added']."</TD></TR>";
	    } // while
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE>";

	return $report;
}

function GetLastBlockedHosts() {
global $TABLE_BACKGROUND_1;
global $TABLE_BACKGROUND_2;
global $TABLE_BACKGROUND_1_HI;
global $TABLE_BACKGROUND_2_HI;
global $TABLE_BACKGROUND_HEADER;
global $rooturl;

	$yesterday=date("Y-m-d 00:00:00",mktime(0,0,0,date("m"),date("d")-1,date("Y")));
	$today=date("Y-m-d 00:00:00");

	$dbconn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
	$query = "select * from Blocklists where Timestamp_last_activation>'".$yesterday."' and Timestamp_last_activation<'".$today."' order by Timestamp_last_activation";
	$result = $dbconn->query($query);

	$colnum=0;
    $color[0]=$TABLE_BACKGROUND_1;
    $color[1]=$TABLE_BACKGROUND_2;
    $color[2]=$TABLE_BACKGROUND_1_HI;
    $color[3]=$TABLE_BACKGROUND_2_HI;
    $color[4]=$TABLE_BACKGROUND_HEADER;

	$report="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23 bgColor=#f5f5f5><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD bgColor=#f5f5f5><SPAN class=Stil10><a name='lastblocked'>&nbsp;Automatisch geblockte Hosts:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD><TABLE name='lastblocked' id='lastblocked' border=0 cellpadding=0 cellspacing=0 width='100%'><TR bgColor=".$color[4]."><TD><b>gesperrtes Objekt</b></TD><TD><b>Zeitpunkt der Listung</b></TD><TD><B>Anzahl der (Re-)Aktivierungen</B></TD><TD><b>Grund</b></TD><TD><b>aktiv</b></TD></TR>";

	if ($result) {
	    while($row = $result->fetch_assoc()){
			if ($row["BlockType"]==1) {
		    	$hostname = gethostbyaddr($row['BlockValue']);

				if ($hostname) {
				    $host=$hostname." [".$row['BlockValue']."]";
				} else $host=$row['BlockValue'];
			} else $host=$row['BlockValue'];

			if ($row['active']) {
			    $active="ja";
			} else $active="nein";

	        if ($colnum==1) $colnum=0;
		    else $colnum=1;

			$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$host."</TD><TD>".$row['Timestamp_last_activation']."</TD><TD>".$row['spamcount']."</TD><TD>".$row['description']."</TD><TD>".$active."</TD></TR>";
	    } // while
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE>";

	return $report;	
}

function CheckBlocklists() {
global $TABLE_BACKGROUND_1;
global $TABLE_BACKGROUND_2;
global $TABLE_BACKGROUND_1_HI;
global $TABLE_BACKGROUND_2_HI;
global $TABLE_BACKGROUND_HEADER;
global $rooturl;

	$lastweek=date("Y-m-d 00:00:00",mktime(0,0,0,date("m"),date("d")-7,date("Y")));
	$lastmonth=date("Y-m-d 00:00:00",mktime(0,0,0,date("m")-1,date("d"),date("Y")));

	$dbconn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
	$query = "select * from Blocklists where active=1 and spamcount<5 and blockedpermanent=0 and Timestamp_last_activation<'".$lastweek."'";
	$result = $dbconn->query($query);

	$colnum=0;
    $color[0]=$TABLE_BACKGROUND_1;
    $color[1]=$TABLE_BACKGROUND_2;
    $color[2]=$TABLE_BACKGROUND_1_HI;
    $color[3]=$TABLE_BACKGROUND_2_HI;
    $color[4]=$TABLE_BACKGROUND_HEADER;

	$report="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23 bgColor=#f5f5f5><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD bgColor=#f5f5f5><SPAN class=Stil10><a name='1weekblocked'>&nbsp;Folgende Objekte wurden nach einw&ouml;chiger Sperre wieder reaktiviert:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD><TABLE name='reactivated' id='reactivated' border=0 cellpadding=0 cellspacing=0 width='100%'><TR bgColor=".$color[4]."><TD><b>gesperrtes Objekt</b></TD><TD><b>Zeitpunkt der Listung</b></TD><TD><B>Anzahl der (Re-)Aktivierungen</B></TD><TD><b>Grund</b></TD><TD><b>aktiv</b></TD></TR>";

	if ($result) {
		if ($result->num_rows>0) {
		    while($row = $result->fetch_assoc()){
				if ($row["BlockType"]==1) {
			    	$hostname = gethostbyaddr($row['BlockValue']);

					if ($hostname) {
					    $host=$hostname." [".$row['BlockValue']."]";
					} else $host=$row['BlockValue'];
				} else $host=$row['BlockValue'];

				if ($row['active']) {
				    $active="ja";
				} else $active="nein";

		        if ($colnum==1) $colnum=0;
			    else $colnum=1;

				$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$host."</TD><TD>".$row['Timestamp_last_activation']."</TD><TD>".$row['spamcount']."</TD><TD>".$row['description']."</TD><TD>".$active."</TD></TR>";
				$query = "update Blocklists set active=0 where BLID=".$row['BLID'];
				$resupdate = $dbconn->query($query);
		    } // while
		} else $report.="<TR><TD colspan=5>keine Daten vorhanden</TD></TR>";
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE><BR>";

	$query = "select * from Blocklists where active=1 and spamcount<20 and blockedpermanent=0 and Timestamp_last_activation<'".$lastmonth."'";
	$result = $dbconn->query($query);

	$colnum=0;
	$report.="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23 bgColor=#f5f5f5><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD bgColor=#f5f5f5><SPAN class=Stil10><a name='1monthblocked'>&nbsp;Folgende Objekte wurden nach einmonatiger Sperre wieder reaktiviert:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD><TABLE name='reactivated' id='reactivated' border=0 cellpadding=0 cellspacing=0 width='100%'><TR bgColor=".$color[4]."><TD><b>gesperrtes Objekt</b></TD><TD><b>Zeitpunkt der Listung</b></TD><TD><B>Anzahl der (Re-)Aktivierungen</B></TD><TD><b>Grund</b></TD><TD><b>aktiv</b></TD></TR>";

	if ($result) {
		if ($result->num_rows>0) {
		    while($row = $result->fetch_assoc()){
				if ($row["BlockType"]==1) {
			    	$hostname = gethostbyaddr($row['BlockValue']);

					if ($hostname) {
					    $host=$hostname." [".$row['BlockValue']."]";
					} else $host=$row['BlockValue'];
				} else $host=$row['BlockValue'];

				if ($row['active']) {
				    $active="ja";
				} else $active="nein";

		        if ($colnum==1) $colnum=0;
			    else $colnum=1;

				$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$host."</TD><TD>".$row['Timestamp_last_activation']."</TD><TD>".$row['spamcount']."</TD><TD>".$row['deliveries_ham']."</TD><TD>".$row['description']."</TD><TD>".$active."</TD></TR>";
				$query = "update Blocklists set active=0 where BLID=".$row['BLID'];
				$resupdate = $dbconn->query($query);
		    } // while
		} else $report.="<TR><TD colspan=5>keine Daten vorhanden</TD></TR>";
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE><BR>";

	$query = "select * from Blocklists where active=1 and spamcount>20 and blockedpermanent=0";
	$result = $dbconn->query($query);

	$colnum=0;
	$report.="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23 bgColor=#f5f5f5><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD bgColor=#f5f5f5><SPAN class=Stil10><a name='permanentblocked'>&nbsp;Folgende Objekte werden ab sofort permanent geblockt:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD>	<TABLE name='permanentblocked' id='permanentblocked' border=0 cellpadding=0 cellspacing=0 width='100%'><TR bgColor=".$color[4]."><TD><b>gesperrtes Objekt</b></TD><TD><b>Zeitpunkt der Listung</b></TD><TD><B>Anzahl der (Re-)Aktivierungen</B></TD><TD><b>Grund</b></TD><TD><b>aktiv</b></TD></TR>";

	if ($result) {
		if ($result->num_rows>0) {
		    while($row = $result->fetch_assoc()){
				if ($row["BlockType"]==1) {
			    	$hostname = gethostbyaddr($row['BlockValue']);

					if ($hostname) {
					    $host=$hostname." [".$row['BlockValue']."]";
					} else $host=$row['BlockValue'];
				} else $host=$row['BlockValue'];

				if ($row['active']) {
				    $active="ja";
				} else $active="nein";

		        if ($colnum==1) $colnum=0;
			    else $colnum=1;

				$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$host."</TD><TD>".$row['Timestamp_last_activation']."</TD><TD>".$row['spamcount']."</TD><TD>".$row['deliveries_ham']."</TD><TD>".$row['description']."</TD><TD>".$active."</TD></TR>";
				$query = "update Blocklists set blockedpermanent=1 where BLID=".$row['BLID'];
				$resupdate = $dbconn->query($query);
		    } // while
		} else $report.="<TR><TD colspan=5>keine Daten vorhanden</TD></TR>";
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE>";

	return $report;
}

function CheckLogsForMalware () {
global $TABLE_BACKGROUND_1;
global $TABLE_BACKGROUND_2;
global $TABLE_BACKGROUND_1_HI;
global $TABLE_BACKGROUND_2_HI;
global $TABLE_BACKGROUND_HEADER;
global $rooturl;

	$yesterday=date("Y-m-d",mktime(0,0,0,date("m"),date("d")-1,date("Y")));

	exec ("tail -n 60000 ".LOG_EXIM_MAINLOG." |grep '".$yesterday."' |grep malware",$output,$retvar);

	$colnum=0;
    $color[0]=$TABLE_BACKGROUND_1;
    $color[1]=$TABLE_BACKGROUND_2;
    $color[2]=$TABLE_BACKGROUND_1_HI;
    $color[3]=$TABLE_BACKGROUND_2_HI;
    $color[4]=$TABLE_BACKGROUND_HEADER;

	$report="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23 bgColor=#f5f5f5><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD bgColor=#f5f5f5><SPAN class=Stil10><a name='malware'>&nbsp;Gefilterte Malware:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD><TABLE name='malware' id='malware' border=0 cellpadding=0 cellspacing=0 width='100%'><TR bgColor=".$color[4]."><TD><b>Zeitpunkt</b></TD><TD><b>Nachrichten ID</b></TD><TD><B>Host [IP]</B></TD><TD><b>Absenderadresse</b></TD><TD><b>Malware</b></TD></TR>";

	foreach ($output as $outline) {
		if (preg_match("/F=<.*>/i",$outline,$matches)) {
			$email=substr($matches[0],3,strlen($matches[0])-4);
		}

		if (preg_match("/malware \(.*\)$/i",$outline,$matches)) {
		    $malware=substr($matches[0],9,strlen($matches[0])-10);
		}

		if (preg_match("/\[.*\]/i",$outline,$matches)) {
		    $ip=substr($matches[0],1,strlen($matches[0])-2);
	    	$hostname = gethostbyaddr($ip);

			if ($hostname) {
			    $host=$hostname." [".$ip."]";
			} else $host=$ip;
		}

		$line=preg_split("/ /",$outline);
		$date=$line[0];
		$time=$line[1];
		$msgid=$line[2];

        if ($colnum==1) $colnum=0;
	    else $colnum=1;

		$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$date." ".$time."</TD><TD>".$msgid."</TD><TD>".$host."</TD><TD>".$email."</TD><TD>".$malware."</TD></TR>";
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE>";

	return $report;
}

function CheckLogsForSpam () {
global $TABLE_BACKGROUND_1;
global $TABLE_BACKGROUND_2;
global $TABLE_BACKGROUND_1_HI;
global $TABLE_BACKGROUND_2_HI;
global $TABLE_BACKGROUND_HEADER;
global $rooturl;

	$yesterday=date("Y-m-d",mktime(0,0,0,date("m"),date("d")-1,date("Y")));

	exec ("tail -n 60000 ".LOG_EXIM_MAINLOG." |grep '".$yesterday."' |grep Congratulations",$output,$retvar);

	$colnum=0;
    $color[0]=$TABLE_BACKGROUND_1;
    $color[1]=$TABLE_BACKGROUND_2;
    $color[2]=$TABLE_BACKGROUND_1_HI;
    $color[3]=$TABLE_BACKGROUND_2_HI;
    $color[4]=$TABLE_BACKGROUND_HEADER;

	$report="<TABLE cellSpacing=0 cellPadding=0 width='100%' border=0><TBODY><TR width='100%'><TD width=23><IMG src='".$rooturl."/images/pixel1.GIF'></TD><TD><SPAN class=Stil10><a name='spam'>&nbsp;Gefilterter Spam:</a></SPAN></TD></TR></TBODY></TABLE><TABLE width='100%'><TBODY><TR><TD><TABLE name='spam' id='spam' border=0 cellpadding=0 cellspacing=0 width='100%'><TR bgColor=".$color[4]."><TD><b>Zeitpunkt</b></TD><TD><b>Nachrichten ID</b></TD><TD><B>Host [IP]</B></TD><TD><b>Absenderadresse</b></TD><TD><b>Spamscore</b></TD></TR>";

	foreach ($output as $outline) {
		if (preg_match("/scored .* points/i",$outline,$matches)) {
			$score=substr($matches[0],7,strlen($matches[0])-(7+7));
		}

		if (preg_match("/F=<.*>/i",$outline,$matches)) {
			$email=substr($matches[0],3,strlen($matches[0])-4);
		}

		if (preg_match("/\[.*\]/i",$outline,$matches)) {
		    $ip=substr($matches[0],1,strlen($matches[0])-2);
	    	$hostname = gethostbyaddr($ip);

			if ($hostname) {
			    $host=$hostname." [".$ip."]";
			} else $host=$ip;
		}

		$line=preg_split("/ /",$outline);
		$date=$line[0];
		$time=$line[1];
		$msgid=$line[2];

        if ($colnum==1) $colnum=0;
	    else $colnum=1;

		$report.="<TR bgcolor=\"".$color[$colnum]."\"><TD>".$date." ".$time."</TD><TD>".$msgid."</TD><TD>".$host."</TD><TD>".$email."</TD><TD>".$score."</TD></TR>";
	}

	$report.="</TABLE></TD></TR></TBODY></TABLE>";

	return $report;
}

function formatTime ($timesum) {
        if ($timesum>(60*60)) {
                $hours=floor($timesum/(60*60));
                $minutes=floor(($timesum-($hours*(60*60)))/60);
                $seconds=$timesum-($hours*(60*60))-($minutes*60);
        } elseif ($timesum>60) {
                $minutes=floor($timesum/60);
                $seconds=$timesum-($minutes*60);
        } else {
                $seconds=$timesum;
        }

        $timesum="";

        if ($hours>0) {
                $timesum=$timesum.$hours."h ";
        }

        if ($minutes>0) {
                $timesum=$timesum.$minutes."min ";
        }

        $timesum=$timesum.$seconds."s";

        return $timesum;
}

function formatTraffic ($traffic) {
        if ($traffic>(1024*1024*1024)) {
                $traffic=round($traffic/(1024*1024*1024),4)." GB";
        } elseif ($traffic>(1024*1024)) {
                $traffic=round($traffic/(1024*1024),4)." MB";
        } elseif ($traffic>1024) {
                $traffic=round($traffic/(1024),4)." kB";
        }

        return ($traffic);
}

function isValidEmail($email, $domainCheck = true)
{
    if (preg_match('/^[a-zA-Z0-9\._-]+\@(\[?)[a-zA-Z0-9\-\.]+'.
                   '\.([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/', $email)) {
        return(true);
    }
    return(false);
}

function SendMail($From,$FromName,$To,$ToName,$Subject,$Text)
{
    $From or die("sender address missing");
    $To or die("recipient address missing");

    $mail = new PHPMailer(true);

    $mail->IsSMTP();
    $mail->Host = MAILSERVER;
    $mail->Port = 25;
    $mail->SMTPAuth = true;
    $mail->Username = "mailreport";
    $mail->Password = "uif9ywfR34ayE";
    $mail->SMTPSecure = false;
    $mail->SMTPAutoTLS = false;
    $mail->SetFrom($From, $FromName);
    $mail->AddAddress($To, $ToName);
    $mail->addReplyTo($From, $FromName);
    $mail->Priority = 1;

    $mail->isHTML(true);
    $mail->Subject = $Subject;

    preg_match_all("/src='[0-9a-zA-Z:\/.-]*'/", $Text, $matches);

    $list=array();

    foreach ($matches[0] as $match) {
        if (!in_array($match, $list)) {
            $list[] = $match;
        }
    }

    foreach($list as $key => $entry) {
        preg_match("/'.*'/", $entry, $image_match);
        $image = str_replace("'", "", $image_match[0]);
        $mail->AddEmbeddedImage($image, strval($key), $image);
        $Text = str_replace($entry, "src='cid:".strval($key)."'", $Text);
    }

    $mail->Body = $Text;
    $mail->AltBody = 'This is a HTML based e-mail, if you read this your mail client does not support rendering HTML in e-mails.';

    $mail->Send();

/*
    $headers.="Content-Type: text/html; charset=UTF-8\n\n";
    $test=fsockopen (MAILSERVER,25,$errno,$errstr,1000);

    if ($test)
    {
        $response=fgets ($test);
		if (substr($response,0,3) != "220") return false;
        fwrite ($test,"mail from: ".$From."\n");
        $response=fgets ($test);
		if (substr($response,0,3) != "250") return false;
        fwrite ($test,"rcpt to: ".$To."\n");
        $response=fgets ($test);
		if (substr($response,0,3) != "250") return false;
        fwrite ($test,"data\n");
        $response=fgets ($test);
		if (substr($response,0,3) != "354") return false;
        fwrite ($test,$headers."\n".utf8_encode("<HTML><BODY>".str_replace("\n","<BR>",$Text)."</BODY></HTML>")."\n.\n");
        $response=fgets ($test);
		if (substr($response,0,3) != "250") return false;
        fwrite ($test,"quit\n");
        $response=fgets ($test);
		if (substr($response,0,3) != "221") return false;
        fclose ($test);
    } else {
		return false;
    }
*/

    return true;
}
?>
